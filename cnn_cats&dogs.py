# -*- coding: utf-8 -*-
"""cnn_cats&dogs

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h57h4OYhISXq1H_uvijS4uDoceiOTh6O
"""

import tensorflow as tf
from keras.preprocessing.image import ImageDataGenerator
tf.__version__

train_datagen =ImageDataGenerator(
    rescale = 1./255,
    shear_range = 0.2,
    zoom_range = 0.2,
    horizontal_flip = True
)

from google.colab import drive
drive.mount('/content/drive')

!pip install -q keras

import keras

training_set = train_datagen.flow_from_directory(
    '/content/drive/MyDrive/dataset/training_set',
    batch_size=32,
    target_size=(64,64),
    class_mode = 'binary'
    )

test_datagen = ImageDataGenerator(rescale=1./255)

testing_set = test_datagen.flow_from_directory(
    '/content/drive/MyDrive/dataset/testing_set',
    batch_size=32,
    target_size=(64,64),
    class_mode = 'binary'
    )

cnn = tf.keras.models.Sequential()

cnn.add(tf.keras.layers.Conv2D(
    filters=32,
    kernel_size=3,
    activation='relu',
    input_shape =[64,64,3]))

cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))

cnn.add(tf.keras.layers.Conv2D(
    filters =32,
    kernel_size=3,
    activation='relu'
))

cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))

cnn.add(tf.keras.layers.Flatten())

cnn.add(tf.keras.layers.Dense(
      units = 128,
      activation='relu',
  ))

cnn.add(tf.keras.layers.Dense(
    units = 1,
    activation='sigmoid',
))

cnn.compile(optimizer='adam',
            loss='binary_crossentropy',
            metrics=['accuracy'])

cnn.fit(x = training_set,epochs=5)

cnn.fit(x= training_set,validation_data=testing_set,epochs =25)

import numpy as np
from keras.preprocessing import image
test_image  =image.load_img('/content/drive/MyDrive/dataset/single_prediction/cat_or_dog_1.jpg',target_size=(64,64))
test_image=image.img_to_array(test_image)
test_image=np.expand_dims(test_image,axis = 0)
result =  cnn.predict(test_image)
training_set.class_indices
if result[0][0]==1:
  prediction = 'dog'
else:
  prediction = 'cat'
print(prediction)

import matplotlib.pyplot as plt

plt.show(result)





